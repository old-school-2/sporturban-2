<?php

function main($protocol, $data)
{
    $character = $data['character']['id'];

    $log = get_log($protocol, $data);

    $array_buttons = init_button();
    $state   = get_state($log);
    $text = get_text( $protocol,  $data);

//    $text = cleardata($text);
    //–ó–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    //–°–æ–±—ã—Ç–∏–µ
    $content = s_event($protocol, $data, $text, $array_buttons);
    if ($content != null){
        return $content;
    }

    //–ó–∞–ø–∏—Å—å
    $content = s_subscribe($protocol, $data, $text, $array_buttons, $log);
    if ($content != null){
        return $content;
    }

    //–ó–∞–ø–∏—Å—å
    $content = s_unsubscribe($protocol, $data, $text, $array_buttons, $log);
    if ($content != null){
        return $content;
    }

    //–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    $type = comands_bd($text);
    $content = s_global($protocol, $data, $type, $array_buttons, $character, $state, $log);
    if ($content != null){
        return $content;
    }

    //–°–æ–∑–¥–∞—Ç—å –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞
    $content = s_create_sport($protocol, $data, $type, $array_buttons, $character, $state, $text);
    if ($content != null){
        return $content;
    }

    //–°–æ–∑–¥–∞—Ç—å –º–µ—Å—Ç–æ
    $content = s_create_place($protocol, $data, $type, $array_buttons, $character, $state, $text);
    if ($content != null){
        return $content;
    }

    //–°–æ–∑–¥–∞—Ç—å –¥–∞—Ç—É
    $content = s_create_date($protocol, $data, $type, $array_buttons, $character, $state, $text, $log);
    if ($content != null){
        return $content;
    }

    //–°–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º—è
    $content = s_create_time($protocol, $data, $type, $array_buttons, $character, $state, $text, $log);
    if ($content != null){
        return $content;
    }

    //–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
    $content = s_delete_event($protocol, $data, $type, $array_buttons, $character, $state, $text, $log);
    if ($content != null){
        return $content;
    }
    //–ó–∞–¥–∞—Ç—å –∞–¥—Ä–µ—Å
    $content = s_set_adress($protocol, $data, $type, $array_buttons, $character, $state, $text, $log);
    if ($content != null){
        return $content;
    }

    //–ü–æ–∏—Å–∫
    $content = s_search_sport($protocol, $data, $type, $array_buttons, $character, $state, $text, $log);
    if ($content != null){
        return $content;
    }

    //–í–∏–¥ —Å–ø–æ—Ä—Ç–∞
    $content = s_type_sport($protocol, $data, $type, $array_buttons, $character, $state, $text, $log);
    if ($content != null){
        return $content;
    }

    //–ö–æ–≥–¥–∞ –Ω–µ—á–µ–≥–æ –æ—Ç–≤–µ—á–∞—Ç—å
        $state = '';
        $array_buttons = type_sport_button($array_buttons);
        $buttons = get_buttons($protocol,  $array_buttons);
        $content = get_content_text($protocol,   answers_bd('–ø–æ–º–æ—â—å', $character) , $buttons, $data);// answers_bd('–ø–æ–º–æ—â—å', $character)
        set_field_log($protocol, $data, 'state' , $state);
        return  $content;
}


function s_subscribe($protocol, $data, $text, $array_buttons, $log){
    if  (preg_match('/–∑–∞–ø–∏—Å–∞—Ç—å—Å—è/', $text)){
        $id = $log['event_id'];
        $e = get_event( $id);

        $buttons = get_buttons($protocol,  $array_buttons);

        subscribe($protocol, $data, $id);
        $content =  get_content_text($protocol,  '–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ' . $e['sport']  , $buttons, $data);
        $state = '';
        set_field_log($protocol, $data, 'state' , $state );
    }
    return $content;
}


function s_unsubscribe($protocol, $data, $text, $array_buttons, $log){
    if  (preg_match('/–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è/', $text)){
        $id = $log['event_id'];
        $e = get_event( $id);

        $buttons = get_buttons($protocol,  $array_buttons);

        $qr = unsubscribe($protocol, $data, $id);
        $content =  get_content_text($protocol,  '–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ' . $e['sport'] , $buttons, $data);
        $state = '';
        set_field_log($protocol, $data, 'state' , $state );
    }
    return $content;
}

function s_event($protocol, $data, $text, $array_buttons){
    if  (preg_match('/—Å–æ–±—ã—Ç–∏–µ/', $text)){
        $id = clearData($text,'phone');

        $e = get_event( $id);
        set_field_log($protocol, $data, 'event_id' , $id );

        $array_buttons = event_button($protocol, $data, $e, $array_buttons);

        $buttons = get_buttons($protocol,  $array_buttons);
        $content =  get_event_id( $protocol, $data,  $buttons, $e);
        $state = '';
        set_field_log($protocol, $data, 'state' , $state );

    }
    return $content;
}

function s_global($protocol, $data, $type, $array_buttons, $character, $state, $log){

    switch ($type) {
        case '—Å–æ–∑–¥–∞—Ç—å' :
            $state   = '—Å–æ–∑–¥–∞—Ç—å_–≤–∏–¥_—Å–ø–æ—Ä—Ç–∞';
            $array_buttons = type_sport_button($array_buttons);
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  answers_bd($type, $character) , $buttons, $data);
            break;

        case '—É–¥–∞–ª–∏—Ç—å' :
            $state   = '—É–¥–∞–ª–∏—Ç—å_–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ';
            array_unshift($array_buttons, array('name' => '–î–∞'));
            array_unshift($array_buttons, array('name' => '–ù–µ—Ç'));
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: ' , $buttons, $data);
            break;

        case '–≥–ª–∞–≤–Ω–∞—è' :
            $state   = $type;
            $array_buttons = type_sport_button($array_buttons);
            array_unshift($array_buttons, array('name' => 'üî• –õ—é–±–æ–π'));
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  answers_bd($type, $character) , $buttons, $data);
            break;

        case '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' :
            $state   = $type;

            $events = get_events_shedule($protocol, $data);
            $array_buttons = next_button($protocol, $data, $array_buttons, $events );
            $buttons = get_buttons($protocol,  $array_buttons);

            if ( $events  == null ){
                $content = get_content_text($protocol,  '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞, –∏–ª–∏ —Å–∫–∞–∂–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å", —á—Ç–æ–±—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ—ë –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', $buttons, $data);
            }else{
                $content = get_content_list($protocol, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –í–∞—Å', $buttons, $data,  $events, $log);
            }

            break;
        case '–ø–æ–∏—Å–∫' :
            $state   = $type;
            $array_buttons = type_sport_button($array_buttons);
            array_unshift($array_buttons, array('name' => 'üî• –õ—é–±–æ–π'));

            $buttons = get_buttons($protocol, $array_buttons);

            $content = get_content_text($protocol,  answers_bd($type, $character) , $buttons, $data);
            break;

        case '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä':
            $state   = $type;
            $events = get_events_array_autor($protocol, $data, $log['offset'] );
            $array_buttons = org_button($array_buttons);
            $array_buttons = next_button($protocol, $data, $array_buttons, $events );

            $buttons = get_buttons($protocol,  $array_buttons);
            if ( $events  == null ){
                $content = get_content_text($protocol,  '–£ –í–∞—Å –Ω–µ—Ç –ø–æ–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', $buttons, $data);
            }else{
                $content = get_content_list($protocol, '–í–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', $buttons, $data,  $events , $log);
            }
            break;

        case '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
            $state   = $type;
            $settings = get_settings($protocol, $data);//. $settings['adress'] . $settings['telegram']
            array_unshift($array_buttons, array('name' => 'üè† –ê–¥—Ä–µ—Å ' . $settings['adress'], 'text' => '–ê–¥—Ä–µ—Å'));
            array_unshift($array_buttons, array('name' => 'üîó –¢–µ–ª–µ–≥—Ä–∞–º ' . $settings['telegram'], 'url' => "https://t.me/sporturbanBot?start=source-yandex-" . UserId($protocol, $data) , 'hide' => false));

            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  answers_bd($type, $character) , $buttons, $data);
            break;

        case '–∞–¥—Ä–µ—Å':
            $state   = $type;
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  answers_bd($type, $character) , $buttons, $data);
            break;

        case '–ø–æ–º–æ—â—å':
            $array_buttons = type_sport_button($array_buttons);
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,   answers_bd($type, $character) , $buttons, $data);
            break;

        case '–µ—â—ë':
            $events = get_events($protocol, $data, $log['search_sql'], $log['offset']);
            $array_buttons = next_button($protocol, $data, $array_buttons, $events);
            $buttons = get_buttons($protocol,  $array_buttons);
            if (count($events) != 0){
//                $content = get_content_text($protocol,  '–ï—â—ë –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', null, $data);
               $content = get_content_list($protocol, '–ï—â—ë –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:', $buttons, $data,  $events, $log);
            }
            break;

        case '–≤—ã—Ö–æ–¥':
            $content = get_content_text($protocol,  answers_bd($type, $character) , null, $data);
            break;

        default:
            break;
    }
    set_field_log($protocol, $data, 'state' , $state );

    return $content;
}

function s_create_sport($protocol, $data, $type, $array_buttons, $character, $state, $text){

    if ($state == '—Å–æ–∑–¥–∞—Ç—å_–≤–∏–¥_—Å–ø–æ—Ä—Ç–∞') {
            $type_sport =  check_sport($text);

            if  ($type_sport != '') {
                //–í–∏–¥ —Å–ø–æ—Ä—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω, –∑–∞–ø–∏—à–µ–º –≤ –±–∞–∑—É
                $state = '—Å–æ–∑–¥–∞—Ç—å_–º–µ—Å—Ç–æ';
                set_field_log($protocol, $data, 'org_sport' , $type_sport);

                $buttons = get_buttons($protocol,  $array_buttons);
                $content = get_content_text($protocol,  '–Ø –ª—é–±–ª—é ' . $type_sport . "! –°–∫–∞–∂–∏—Ç–µ –ê–¥—Ä–µ—Å –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã" , $buttons, $data);

                set_field_log($protocol, $data, 'state' , $state );
            }else{
                //–í–∏–¥ —Å–ø–æ—Ä—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
                $array_buttons = type_sport_button($array_buttons);
                $buttons = get_buttons($protocol,  $array_buttons);
                $content = get_content_text($protocol,  '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞, –ø–æ—Ä–æ–±—É–π—Ç–µ —Å–∫–∞–∑–∞—Ç—å –∏–Ω–∞—á–µ' , $buttons, $data);
            }
}
    return $content;
}

function s_create_place($protocol, $data, $type, $array_buttons, $character, $state, $text){

    if ($state == '—Å–æ–∑–¥–∞—Ç—å_–º–µ—Å—Ç–æ') {

        list( $geo, $place , $locality ) = check_adress($text);

            if ( $place != '') {
                //–ú–µ—Å—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
                set_field_log($protocol, $data, 'org_place' , $place);
                set_field_log($protocol, $data, 'org_geo'   , $geo);
                set_field_log($protocol, $data, 'locality'  , $locality );

                array_unshift($array_buttons, array('name' => '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'));
                array_unshift($array_buttons, array('name' => '–°—É–±–±–æ—Ç–∞'));
                array_unshift($array_buttons, array('name' => '–ü—è—Ç–Ω–∏—Ü–∞'));
                array_unshift($array_buttons, array('name' => '–ó–∞–≤—Ç—Ä–∞'));
                array_unshift($array_buttons, array('name' => '–°–µ–≥–æ–¥–Ω—è'));
                $buttons = get_buttons($protocol,  $array_buttons);
                $content = get_content_text($protocol,  '–û—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ,  ' . $place . "! –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", $buttons, $data);

                //–ï—Å–ª–∏ –º–µ—Å—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
                $state = '—Å–æ–∑–¥–∞—Ç—å_–¥–∞—Ç–∞';
                set_field_log($protocol, $data, 'state' , $state );

            }else{
                //–í–∏–¥ —Å–ø–æ—Ä—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
                $array_buttons = type_sport_button($array_buttons);
                $buttons = get_buttons($protocol,  $array_buttons);
                $content = get_content_text($protocol,  '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞, –ø–æ—Ä–æ–±—É–π—Ç–µ —Å–∫–∞–∑–∞—Ç—å –∏–Ω–∞—á–µ' , $buttons, $data);
            }
    }
    return $content;
}


function s_set_adress($protocol, $data, $type, $array_buttons, $character, $state, $text){

    if ($state == '–∞–¥—Ä–µ—Å') {
        $adress = $text;

        list( $geo, $adress_name, $locality  ) = check_adress($adress);
        if ( $adress_name != '') {

            array_unshift($array_buttons, array('name' => 'üè† –ê–¥—Ä–µ—Å ' . $adress_name, 'text' => '–ê–¥—Ä–µ—Å'));
            //–ú–µ—Å—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
            $buttons = get_buttons($protocol,  $array_buttons);

            $content = get_content_text($protocol,  "–ê–¥—Ä–µ—Å, —Å–æ—Ö—Ä–∞–Ω–µ–Ω", $buttons, $data);
            set_settings($protocol, $data, $geo, $adress_name);

            $state = '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏';
            set_field_log($protocol, $data, 'locality' , $locality);
            set_field_log($protocol, $data, 'state' , $state );

        }else{

            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞–∑–∞—Ç—å –∏–Ω–∞—á–µ' , $buttons, $data);
        }
    }
    return $content;
}

function s_create_date($protocol, $data, $type, $array_buttons, $character, $state, $text){

    if ($state == '—Å–æ–∑–¥–∞—Ç—å_–¥–∞—Ç–∞') {

        $date = check_date($text);
        if ( $date == null ){
            $date = get_date_json($protocol, $data);
        }

        if ( $date != null ) {
            //–î–∞—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
            set_field_log($protocol, $data, 'org_date' , $date);

            array_unshift($array_buttons, array('name' => '18:00'));
            array_unshift($array_buttons, array('name' => '16:00'));
            array_unshift($array_buttons, array('name' => '14:00'));
            array_unshift($array_buttons, array('name' => '12:00'));
            array_unshift($array_buttons, array('name' => '10:00'));

            //–ó–∞–¥–∞—Ç—å –≤—Ä–µ–º—è
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  '–û—Ç–ª–∏—á–Ω–æ!  ' . $date . "! –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", $buttons, $data);

            //–ï—Å–ª–∏ –º–µ—Å—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
            $state = '—Å–æ–∑–¥–∞—Ç—å_–≤—Ä–µ–º—è';
            set_field_log($protocol, $data, 'state' , $state );

        }else{
            //–í–∏–¥ —Å–ø–æ—Ä—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –¥–∞—Ç—ã, —Å–∫–∞–∂–∏—Ç–µ –∏–Ω–∞—á–µ', $buttons, $data);
        }
    }
    return $content;
}

function s_create_time($protocol, $data, $type, $array_buttons, $character, $state, $text, $log){
    if ($state == '—Å–æ–∑–¥–∞—Ç—å_–≤—Ä–µ–º—è') {
            $time = $text;

            if ( $time != '') {
                //–í—Ä–µ–º—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
                set_field_log($protocol, $data, 'org_time' , $time);
                $event_id = add_event($protocol, $data, $log['org_place'],  $log['org_sport'],  $log['org_date'], $time, $log['org_geo'],  get_img_by_sport($log['org_sport']) , $log['locality']);

                $array_buttons = org_button($array_buttons);
                $buttons = get_buttons($protocol,  $array_buttons);
                //–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
                subscribe($protocol, $data, $event_id );

                $content = get_content_text($protocol,  '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ ' . $log['org_sport'] . ' –ø–ª–æ—â–∞–¥–∫–∞ '. $log['org_place'] . ' –¥–∞—Ç–∞ ' . $log['org_date'] . ' –≤—Ä–µ–º—è ' . $time . "!" , $buttons, $data);
                $state = '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä';
                set_field_log($protocol, $data, 'state' , $state );

            }else{
                //–î–∞—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
                $array_buttons = type_sport_button($array_buttons);
                $buttons = get_buttons($protocol,  $array_buttons);
                $content = get_content_text($protocol,  '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –¥–∞—Ç—É, –ø–æ—Ä–æ–±—É–π—Ç–µ —Å–∫–∞–∑–∞—Ç—å –∏–Ω–∞—á–µ', $buttons, $data);
            }
    }
    return $content;
}


function s_delete_event($protocol, $data, $type, $array_buttons, $character, $state, $text, $log){
    if ($state == '—É–¥–∞–ª–∏—Ç—å_–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ') {
        if ( $text == '–¥–∞') {
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ', $buttons, $data);
            event_delete($log['event_id']);
            $state = '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä';
            set_field_log($protocol, $data, 'state' , $state );

        }else{
            $state = '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä';
            set_field_log($protocol, $data, 'state' , $state );

            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  '–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', $buttons, $data);
        }
    }
    return $content;
}

function s_search_sport($protocol, $data, $type, $array_buttons, $character, $state, $text, $log){
    if ($state == '–ø–æ–∏—Å–∫') {
        $content = s_type_sport($protocol, $data, $type, $array_buttons, $character, $state, $text, $log);
    }
    return $content;
}

function s_type_sport($protocol, $data, $type, $array_buttons, $character, $state, $text, $log){
    if  ($text == '–ª—é–±–æ–π' ){
        $type_sport = '–ª—é–±–æ–π';
    }else{
        $type_sport = check_sport($text);
    }

    if ($type_sport != '' ){

        $events = get_events_array($protocol, $data, $type_sport, $log['offset'] );
        $array_buttons = next_button($protocol, $data, $array_buttons, $events );

        if ( $events  == null ){
            array_unshift($array_buttons, array('name' => 'üòé –°–æ–∑–¥–∞—Ç—å'));
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_text($protocol,  '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å, —É–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—ë –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', $buttons, $data);
        }else{
            $buttons = get_buttons($protocol,  $array_buttons);
            $content = get_content_list($protocol, '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É ' . $type_sport, $buttons, $data,  $events, $log);
        }

    }
    return $content;
}